{"ast":null,"code":"var _jsxFileName = \"/Users/parkjunga/Desktop/react-app/src/App.js\";\nimport React, { Component } from 'react';\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContents\";\nimport CreateContent from './components/CreateContents';\nimport Subject from \"./components/Subject\";\nimport Control from \"./components/Control\";\nimport './App.css';\nimport { unstable_batchedUpdates } from 'react-dom'; // 최신 자바스크립트는 클래스 안에 속하는 function은 function을 생략 원래 function render이나 생략\n// 하나의 최상위 태그만 써야된다 !\n// attibute == props\n\nclass App extends Component {\n  // 컴포넌트 초기화시켜주고 싶은 코드를 여기다 집어넣음\n  constructor(props) {\n    super(props);\n    this.max_content_id = 3; // max_content_id 데이터를 추가할떄 아이디를 뭐로할지 추가할때 사용하려고 하는거라 임의값이라\n\n    this.state = {\n      mode: 'create',\n      selected_content_id: 2,\n      subject: {\n        title: \"WEB\",\n        sub: \"world Wid Web!\"\n      },\n      Welcome: {\n        title: \"Welcome\",\n        desc: \"Hello, React!!\"\n      },\n      contents: [{\n        id: 1,\n        title: 'HTML',\n        desc: \"HTML is HyperText\"\n      }, {\n        id: 2,\n        title: 'CSS',\n        desc: \"CSS is for design\"\n      }, {\n        id: 3,\n        title: 'JavaScript',\n        desc: \"JS is for for Interactive\"\n      }] // 데이터가 많아 배열형태\n\n    };\n  }\n\n  render() {\n    console.log(\"App render\");\n\n    var _title,\n        _desc,\n        _article = null;\n\n    if (this.state.mode === 'Welcome') {\n      _title = this.state.Welcome.title;\n      _desc = this.state.Welcome.desc;\n      _article = /*#__PURE__*/React.createElement(ReadContent, {\n        title: _title,\n        desc: _desc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 18\n        }\n      });\n    } else if (this.state.mode === 'read') {\n      var i = 0;\n\n      while (i < this.state.contents.length) {\n        var data = this.state.contents[i];\n\n        if (data.id === this.state.selected_content_id) {\n          _title = data.title;\n          _desc = data.desc;\n          break;\n        }\n\n        i = i + 1;\n      }\n\n      _article = /*#__PURE__*/React.createElement(ReadContent, {\n        title: _title,\n        desc: _desc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }\n      });\n    } else if (this.state.mode === 'create') {\n      _article = /*#__PURE__*/React.createElement(CreateContent, {\n        onSubmit: function (_title, _desc) {\n          console.log(_title, _desc);\n          this.max_content_id = this.max_content_id + 1;\n          this.state.contents.push({\n            id: this.max_content_id,\n            title: _title,\n            desc,\n            _desc\n          }); // state값 직접수정하면 react 모름\n\n          this.setState({\n            contents: this.state.contents\n          });\n        }.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Subject, {\n      title: this.state.subject.title,\n      sub: this.state.subject.sub,\n      onChangePage: function () {\n        //        alert('hihihi');\n        // 동적으로 값을 받고있을때는 이렇게 \n        this.setState({\n          mode: \"Welcome\"\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(TOC, {\n      onChangePage: function (id) {\n        this.setState({\n          mode: \"read\",\n          selected_content_id: Number(id)\n        });\n      }.bind(this),\n      data: this.state.contents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Control, {\n      onChangeMode: function (_mode) {\n        this.setState({\n          mode: _mode\n        });\n      }.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }), _article);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/parkjunga/Desktop/react-app/src/App.js"],"names":["React","Component","TOC","ReadContent","CreateContent","Subject","Control","unstable_batchedUpdates","App","constructor","props","max_content_id","state","mode","selected_content_id","subject","title","sub","Welcome","desc","contents","id","render","console","log","_title","_desc","_article","i","length","data","push","setState","bind","Number","_mode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TOC from \"./components/TOC\";\nimport ReadContent from \"./components/ReadContents\";\nimport CreateContent from './components/CreateContents';\nimport Subject from \"./components/Subject\";\nimport Control from \"./components/Control\";\nimport './App.css';\nimport { unstable_batchedUpdates } from 'react-dom';\n\n// 최신 자바스크립트는 클래스 안에 속하는 function은 function을 생략 원래 function render이나 생략\n// 하나의 최상위 태그만 써야된다 !\n// attibute == props\n\n\n\nclass App extends Component{\n  // 컴포넌트 초기화시켜주고 싶은 코드를 여기다 집어넣음\n  constructor(props){\n    super(props);\n    this.max_content_id = 3 ; // max_content_id 데이터를 추가할떄 아이디를 뭐로할지 추가할때 사용하려고 하는거라 임의값이라\n    this.state = {\n      mode:'create',\n      selected_content_id:2,\n      subject:{title:\"WEB\" , sub:\"world Wid Web!\"},\n      Welcome:{title:\"Welcome\", desc:\"Hello, React!!\"},\n      contents:[\n        {id:1, title:'HTML',desc:\"HTML is HyperText\"},\n        {id:2, title:'CSS', desc:\"CSS is for design\"},\n        {id:3, title:'JavaScript', desc:\"JS is for for Interactive\"}\n      ] // 데이터가 많아 배열형태\n    }\n  }\n  render() {\n    console.log(\"App render\")\n    var _title, _desc, _article = null;\n    if(this.state.mode === 'Welcome'){\n      _title = this.state.Welcome.title;\n      _desc = this.state.Welcome.desc;\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    } else if (this.state.mode === 'read'){\n      var i = 0;\n      while(i < this.state.contents.length){\n        var data = this.state.contents[i];\n        if (data.id === this.state.selected_content_id){\n          _title = data.title;\n          _desc = data.desc;\n          break;\n        }\n        i = i + 1;\n      }\n      _article = <ReadContent title={_title} desc={_desc}></ReadContent>\n    } else if (this.state.mode === 'create'){\n      _article = <CreateContent onSubmit={function(_title,_desc){\n        console.log(_title,_desc);\n        this.max_content_id = this.max_content_id + 1;\n        this.state.contents.push(\n          {id:this.max_content_id, title:_title, desc,_desc}    \n        ); // state값 직접수정하면 react 모름\n        this.setState({\n          contents:this.state.contents\n        });\n      }.bind(this)}></CreateContent>\n    }\n  return (\n    <div className=\"App\">\n      <Subject title={this.state.subject.title} \n                 sub={this.state.subject.sub}\n      onChangePage = {function(){\n//        alert('hihihi');\n// 동적으로 값을 받고있을때는 이렇게 \n        this.setState({mode:\"Welcome\"})\n      }.bind(this)}>\n      </Subject>\n      <TOC \n      onChangePage={function(id){\n        this.setState({\n          mode:\"read\",\n          selected_content_id:Number(id)\n        });\n      }.bind(this)} data={this.state.contents}></TOC>\n      <Control onChangeMode={function(_mode){\n        this.setState({\n          mode:_mode\n        });\n      }.bind(this)}></Control>\n      {_article}\n    </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}